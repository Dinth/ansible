- name: Install fonts
  hosts: dinth-mint
  vars:
    font_dir_linux: /usr/share/fonts/truetype
    font_dir_darwin: /Library/Fonts
    font_dir: "{{ lookup('vars','font_dir_'+ansible_os_family|lower, default=font_dir_linux) }}"
    default_terminal_font:
  tasks:
  - name: Check if Fontconfig exists | fail
    ansible.builtin.apt:
      name: fontconfig
      state: present
    when: ansible_os_family == 'Debian'
    
  - name: Check for the latest release - Pragmasevka | uri
    uri:
      url: https://api.github.com/repos/shytikov/pragmasevka/releases/latest
      return_content: true
    register: pragmasevka_json
  - name: "Download Pragmasevka - {{ pragmasevka_json.json.tag_name }} | get_url"
    get_url: 
      url: "{{ pragmasevka_json.json.zipball_url }}"
      dest: "/tmp/pragmasevka-{{ pragmasevka_json.json.tag_name }}.zip"
    register: pragmasevka_download_result
    failed_when: pragmasevka_download_result.status_code != 200
  - name: Create directory for Pragmasevka | file
    ansible.builtin.file: 
      path: "{{ font_dir +'/pragmasevka' }}"
      state: directory
      mode: '0755'
    become: true
    when: pragmasevka_download_result.status_code == 200
#  - name: "Install Pragmasevka - {{ pragmasevka_json.json.tag_name }} | unarchive"
#    ansible.builtin.unarchive:
#      src: "/tmp/pragmasevka-{{ pragmasevka_json.json.tag_name }}.zip"
#      dest: "{{ font_dir +'/pragmasevka/'}}"
#    become: true
  - name: Check for the latest release - Ubuntu Sans Nerd Font | uri
    uri:
      url: https://api.github.com/repos/ryanoasis/nerd-fonts/releases/latest
      return_content: true
    register: ubuntusans_nerd_json
  - name: "Download UbuntuSans Nerd Font - {{ ubuntusans_nerd_json.json.tag_name }} | get_url"
    get_url:
      url: "https://github.com/ryanoasis/nerd-fonts/releases/download/{{ubuntusans_nerd_json.json.tag_name}}/UbuntuSans.zip"
      dest: "/tmp/ubuntusans_nerd-{{ubuntusans_nerd_json.json.tag_name}}.zip"
    register: ubuntusans_download_result
    failed_when: ubuntusans_download_result.status_code != 200
  - name: Create directory for Ubuntu Sans Nerd | file
    ansible.builtin.file: 
      path: "{{ font_dir +'/UbuntuSansNerd' }}"
      state: directory
      mode: '0755'
    become: true
    when: ubuntusans_download_result.status_code == 200
  - name: "Install Ubuntu Sans Nerd Font - {{ ubuntusans_nerd_json.json.tag_name }} | unarchive"
    ansible.builtin.unarchive:
      src: "/tmp/ubuntusans_nerd-{{ ubuntusans_nerd_json.json.tag_name }}.zip"
      dest: "{{ font_dir +'/UbuntuSansNerd/'}}"
    become: true
    when: ubuntusans_download_result.status_code == 200
  - name: Check for the latest release - Inconsolata Go Nerd Font | uri
    uri:
      url: https://api.github.com/repos/ryanoasis/nerd-fonts/releases/latest
      return_content: true
    register: inconsolatago_nerd_json
  - name: "Download Inconsolata Go Nerd Font - {{ inconsolatago_nerd_json.json.tag_name }} | get_url"
    get_url:
      url: "https://github.com/ryanoasis/nerd-fonts/releases/download/{{inconsolatago_nerd_json.json.tag_name}}/InconsolataGo.zip"
      dest: "/tmp/inconsolatago_nerd-{{inconsolatago_nerd_json.json.tag_name}}.zip"
    register: inconsolatago_download_result
    failed_when: inconsolatago_download_result.status_code != 200
  - name: Create directory for Inconsolata Go Nerd | file
    ansible.builtin.file: 
      path: "{{ font_dir +'/InconsolataGoNerd' }}"
      state: directory
      mode: '0755'
    become: true
    when: inconsolatago_download_result.status_code == 200
  - name: "Install Inconsolata Go Nerd Font - {{ inconsolatago_nerd_json.json.tag_name }} | unarchive"
    ansible.builtin.unarchive:
      src: "/tmp/inconsolatago_nerd-{{ inconsolatago_nerd_json.json.tag_name }}.zip"
      dest: "{{ font_dir +'/InconsolataGoNerd/'}}"
    become: true
    when: inconsolatago_download_result.status_code == 200
  - name: Refresh Fontconfig cache | shell
    become: true
    become_user: "{{ item }}"
    ansible.builtin.shell:
      cmd: "fc-cache -f"
    loop: "{{ users }}"
    when: ansible_system == "Linux"